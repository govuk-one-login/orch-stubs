name: Run Checks

on:
  workflow_call:
    secrets:
      SAM_APP_VALIDATE_ROLE_ARN:
        required: true
      SONAR_TOKEN:
        required: true

jobs:
  style-checks:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Set up Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: "20.x"
      - name: Install dependencies
        run: npm install
      - name: Run lint
        run: npm run check:lint
      - name: Run prettier
        run: npm run check:prettier

  run-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
      - name: Set up Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: "20.x"
      - name: Install dependencies
        run: npm install
      - name: Build
        run: npm run build
      - name: Configure Docker for ARM
        run: docker run --privileged --rm tonistiigi/binfmt --install all
      - name: Start and run tests
        run: npm run start:local:warm & (until curl --silent 127.0.0.1:3000/authorize; do sleep 1; done && npm run test:ci; exit 0)
      - name: SonarCloud Scan
        if: ${{ github.actor != 'dependabot[bot]' }}
        uses: sonarsource/sonarqube-scan-action@2500896589ef8f7247069a56136f8dc177c27ccf # v5.2.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  sam-validation:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up SAM cli
        uses: aws-actions/setup-sam@819220f63fb333a9a394dd0a5cab2d8303fd17e2 # v2
        with:
          use-installer: true

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@f24d7193d98baebaeacc7e2227925dd47cc267f5 # v4.2.0
        with:
          role-to-assume: ${{ secrets.SAM_APP_VALIDATE_ROLE_ARN }}
          aws-region: eu-west-2

      - name: SAM validate Auth
        run: sam validate -t auth-stub-template.yml

      - name: SAM validate IPV
        run: sam validate -t ipv-stub-template.yml

      - name: SAM validate SPOT
        run: sam validate -t spot-stub-template.yml
